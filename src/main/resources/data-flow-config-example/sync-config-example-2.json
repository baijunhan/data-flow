[
  {
    "_id": "auto_core_sys-auto_core_o",
    "converter": [
      {
        "core_table": "core_order",
        "eval_context": [
          {
            "name": "plOrder",
            "sql": "SELECT * FROM pl_order",
            "type": "object"
          },
          {
            "name": "canalBaseBean1",
            "custom_data": "new com.wecash.spectre.business.datachannel.service.bean.canal.CanalBaseBean()"
          },
          {
            "name": "orderDetalis",
            "custom_data": "new Object()"
          },
          {
            "name": "cpLoanInfoBusiness",
            "custom_data": "new Object()"
          },
          {
            "name": "ext",
            "custom_data": "new com.alibaba.fastjson.JSONObject()"
          }
        ],
        "simple_class_convert": false,
        "simple_value_convert": {
          "outer_id": 111,
          "outerOrderId": "#orderNumber",
          "status": "#status",
          "channelOrderNo": "'virtualno_' + #orderNumber",
          "downpayAmount": "#downPayment",
          "totalPaymentAmount": "#monthPay * #periods",
          "periodRepaymentAmount": "#monthPay",
          "period": "#periods",
          "originalApplyAmount": "#financingAmount",
          "repayType": "2",
          "outerCreateTime": "#createTime",
          "outerUpdateTime": "#updateTime",
          "source": "'car_other'"
        },
        "filter":"false",
        "custom_operation": [],
        "conditional": [
          {
            "condition": "#type == 1",
            "expression": "[co].source = 'car_finance'"
          },
          {
            "condition": "#type == 2",
            "expression": "[co].source = 'car_insurance'"
          },
          {
            "condition": "[plOrder] != null && [plOrder].size() > 0",
            "expression": [
              "[canalBaseBean1] = #jsonToJavaBean([plOrder][0], new com.wecash.spectre.business.datachannel.service.bean.canal.PlOrderBean())",
              "#toString([canalBaseBean1])",
              "[co].outerCreateTime = [canalBaseBean1].createTime",
              "[co].updateTime = [canalBaseBean1].updateTime",
              "[co].period = [canalBaseBean1].period",
              "[co].interestRate = [canalBaseBean1].rateEvery",
              "[co].loanAmount = [canalBaseBean1].quota",
              "[co].applyAmount = [canalBaseBean1].quota",
              "[co].loanTime = [canalBaseBean1].createTime",
              "[co].totalPaymentAmount = [canalBaseBean1].total",
              "[co].periodRepaymentAmount = [canalBaseBean1].every",
              "[co].channelPeriods = [canalBaseBean1].period",
              "[co].capitalPeriods = [canalBaseBean1].capitalId",
              {
                "condition": "[canalBaseBean1].type == 20",
                "expression": [
                  {
                    "condition": "[canalBaseBean1].capitalId == 1001",
                    "expression": [
                      "[co].source = 'car_finance'",
                      "[co].fundCost = 0",
                      "[co].capitalFundSchemeId = 737",
                      "[co].capitalId = 185",
                      "[co].capitalOverdueRateMode = 4",
                      "[co].capitalPeriods = 3",
                      "[co].capitalProductId = 606",
                      "[co].capitalRepayType = 2",
                      "[co].channelFundSchemeId = 355",
                      "[co].channelId = 59",
                      "[co].overdueRateMode = 4",
                      "[co].channelPeriods = 3",
                      "[co].channelProductId = 234",
                      "[co].repayType = 2"
                    ]
                  },
                  {
                    "condition": "[canalBaseBean1].capitalId == 1004",
                    "expression": [
                      "[co].source = 'car_finance'",
                      "[co].fundCost = 0.068",
                      "[co].capitalFundSchemeId = 2000211",
                      "[co].capitalId = 20002",
                      "[co].capitalOverdueRateMode = 4",
                      "[co].capitalPeriods = 36",
                      "[co].capitalProductId = 200021",
                      "[co].capitalRepayType = 2",
                      "[co].channelFundSchemeId = 355",
                      "[co].channelId = 59",
                      "[co].overdueRateMode = 4",
                      "[co].channelPeriods = 36",
                      "[co].channelProductId = 234",
                      "[co].repayType = 2"
                    ]
                  },
                  {
                    "condition": "[canalBaseBean1].capitalId == null or [canalBaseBean1].capitalId == 0",
                    "expression": [
                      "[co].source = 'car_finance'",
                      "[co].fundCost = 0",
                      "[co].capitalFundSchemeId = 743",
                      "[co].capitalId = 186",
                      "[co].capitalOverdueRateMode = 4",
                      "[co].capitalPeriods = 3",
                      "[co].capitalProductId = 607",
                      "[co].capitalRepayType = 2",
                      "[co].channelFundSchemeId = 355",
                      "[co].channelId = 59",
                      "[co].overdueRateMode = 4",
                      "[co].channelPeriods = 3",
                      "[co].channelProductId = 234",
                      "[co].repayType = 2"
                    ]
                  }
                ]
              },
              {
                "condition": "[canalBaseBean1].type == 201",
                "expression": [
                  {
                    "condition": "[canalBaseBean1].capitalId == 1001",
                    "expression": [
                      "[co].source = 'car_insurance'",
                      "[co].fundCost = 0",
                      "[co].capitalFundSchemeId = 738",
                      "[co].capitalId = 185",
                      "[co].capitalOverdueRateMode = 3",
                      "[co].capitalPeriods = 30",
                      "[co].capitalProductId = 608",
                      "[co].capitalRepayType = 6",
                      "[co].channelFundSchemeId = 356",
                      "[co].channelId = 59",
                      "[co].overdueRateMode = 3",
                      "[co].channelPeriods = 30",
                      "[co].channelProductId = 235",
                      "[co].repayType = 6"
                    ]
                  },
                  {
                    "condition": "[canalBaseBean1].capitalId == 1004",
                    "expression": [
                      "[co].source = 'car_insurance'",
                      "[co].fundCost = 0",
                      "[co].capitalFundSchemeId = 2000221",
                      "[co].capitalId = 20002",
                      "[co].capitalOverdueRateMode = 3",
                      "[co].capitalPeriods = 30",
                      "[co].capitalProductId = 200022",
                      "[co].capitalRepayType = 6",
                      "[co].channelFundSchemeId = 356",
                      "[co].channelId = 59",
                      "[co].overdueRateMode = 3",
                      "[co].channelPeriods = 30",
                      "[co].channelProductId = 235",
                      "[co].repayType = 6"
                    ]
                  },
                  {
                    "condition": "[canalBaseBean1].capitalId == null or [canalBaseBean1].capitalId is 0",
                    "expression": [
                      "[co].source = 'car_insurance'",
                      "[co].fundCost = 0",
                      "[co].capitalFundSchemeId = 744",
                      "[co].capitalId = 186",
                      "[co].capitalOverdueRateMode = 3",
                      "[co].capitalPeriods = 30",
                      "[co].capitalProductId = 613",
                      "[co].capitalRepayType = 6",
                      "[co].channelFundSchemeId = 356",
                      "[co].channelId = 59",
                      "[co].overdueRateMode = 3",
                      "[co].channelPeriods = 30",
                      "[co].channelProductId = 235",
                      "[co].repayType = 6"
                    ]
                  }
                ]
              }
            ]
          },
          {
            "condition": "#vin != null and #vin.length() > 0",
            "expression": [
              "[orderDetails] = @historyDataService.queryCarPrinceByVin(#vin)",
              "[cpLoanInfoBusiness] = @historyDataService.queryO2oCpLoanInfoBusiness(#orderNumber)",
              "[ext].put('carVin', #vin)",
              {
                "condition": "[orderDetails] != null and [orderDetails].size() > 0",
                "expression": "[ext].put('carPrince',[orderDetails][0][purchase_amount])"
              },
              {
                "condition": "[cpLoanInfoBusiness] != null and [cpLoanInfoBusiness].size() > 0",
                "expression": [
                  "[co].fundCost = [cpLoanInfoBusiness][0][capital_cost]",
                  "[ext].put('carFundCost',[cpLoanInfoBusiness][0][capital_cost])",
                  "[ext].put('carCapitalLoan',[cpLoanInfoBusiness][0][capital_loan_amount])"
                ]
              },
              "[co].ext = [ext].toJSONString()"
            ]
          }
        ],
        "db_update": {
          "method": "auto",
          "insert": {
            "auto_id": true
          },
          "update": {
            "desc": "更新时where条件所使用的字段",
            "qualified_field": [
              "id"
            ]
          },
          "select": {
            "desc": "根据转换后的baen从库中查询原始数据时where条件所使用的的查询字段",
            "qualified_field": [
              "channel_order_no",
              "source"
            ]
          }
        },
        "pre_processor": null,
        "post_processor": ""
      }
    ]
  },
  {
    "id": "repayment_platform-repayment",
    "converter": [
      {
        "core_table": "core_order",
        "eval_context": [
          {
            "name": "coreOrder",
            "type": "$L|CoreOrder",
            "sql": "SELECT cbb.loan_date AS loanTime, op.downpay AS downpayAmount, cbo.bank_id AS capitalId, cbo.bank_prod_id AS capitalProductId, cbo.bank_order_serial_num AS capitalOrderNo, r.order_serial_num AS channelOrderNo, r.apply_amount AS originalApplyAmount, r.should_amount AS totalPaymentAmount, r.repay_type AS repayType, r.repay_type AS userRepayType, r.rate AS interestRate, r.rate_unit AS rateUnit, r.loan_period AS capitalPeriods, r.loan_period AS channelPeriods, oo.subtotal AS loanAmount, r.order_id AS outerOrderId, r.id AS outerId, r.loan_period AS period, r.create_time AS outerCreateTime, r.update_time AS outerUpdateTime, r.apply_amount AS applyAmount FROM repayment_platform.repayment r LEFT JOIN order_platform_release.op_order oo ON r.order_id = oo.id LEFT JOIN order_platform_release.op_payment op ON op.order_id = oo.id LEFT JOIN capital_platform.cp_channel_order cco ON oo.order_serial_num = cco.order_serial_num LEFT JOIN capital_platform.cp_bank_order cbo ON cco.channel_order_serial_num = cbo.channel_order_serial_num LEFT JOIN capital_platform.cp_bank_bill cbb ON cbb.channel_order_serial_num = cco.channel_order_serial_num WHERE oo.order_serial_num = '${#order_serial_num}' HAVING MAX(cco.id)"
          },
          {
            "name": "fundSchemeIdTmp",
            "custom_data": "new long[]{1,3,6}"
          }
        ],
        "custom_operation": [
          "[co] = #mergeObject([co],[coreOrder][0])",
          "#toString([co])"
        ],
        "sample_value_convert": {
          "capitalFundSchemeId": "[fundSchemeIdTmp].?[#this == [co].capitalProductId].length > 0 ? 2 : 1",
          "capitalId": "[co].capitalId + 10000",
          "capitalProductId": "[co].capitalProductId + 10000",
          "channelId": "10001",
          "channelProductId": "10001",
          "channelFundSchemeId": "10000 + #capital_product_id"
        }
      }
    ]
  },
  {
    "id": "repayment_platform-repayment_detail",
    "converter": [
      {
        "core_table": "core_repayment_transactions",
        "eval_context": [
          {
            "type": "map",
            "name": "rs",
            "sql": "SELECT * FROM repayment_platform.repayment_schedule WHERE id = ${#repayment_schedule_id} AND df = 0"
          }
        ],
        "sample_value_convert": {
          "outerId": "#id",
          "channelOrderNo": "#order_serial_num",
          "outerScheduleId": "#repayment_schedule_id",
          "outerOrderId": "[rs][orderId]",
          "period": "[rs][period]",
          "shouldAmount": "[rs][should_amount]",
          "overdueAmount": "[rs][overdue_amount]",
          "overdueDays": "-1",
          "transactionAmount": "#paid_amount",
          "repayStatus": "#pay_status",
          "transactionTime": "#pay_time",
          "repaymentAmount": "#paid_amount",
          "source": "'indonesia'"
        },
        "db_update": {
          "method": "auto",
          "insert": {
            "auto_id": true
          },
          "update": {
            "desc": "更新时where条件所使用的字段",
            "qualified_field": [
              "id"
            ]
          },
          "select": {
            "desc": "根据转换后的baen从库中查询原始数据时where条件所使用的的查询字段",
            "qualified_field": [
              "outer_id",
              "source"
            ]
          }
        }
      }
    ]
  }
]